name: Build OpenWrt with Custom Packages

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build OpenWrt Image

    steps:
    - name: Checkout workflow repo
      uses: actions/checkout@v3

    - name: Set up dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib \
          gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file

    - name: Clone OpenWrt source
      run: |
        git clone --depth=1 https://github.com/qosmio/openwrt-ipq openwrt
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Add fantastic-packages repo
      run: |
        cd openwrt/package
        git clone --depth=1 https://github.com/fantastic-packages/packages fantastic

    - name: Apply custom config and files
      run: |
        cd openwrt
        cp ../config.seed .config
        make defconfig

        # Add custom files if available
        if [ -d ../custom/files ]; then
          cp -r ../custom/files/* files/
        fi

        # Apply patches if any
        if [ -d ../custom/patches ]; then
          for patch in ../custom/patches/*.patch; do
            [ -f "$patch" ] && patch -p1 < "$patch"
          done
        fi

    - name: Build firmware
      run: |
        cd openwrt
        make -j$(nproc)

    - name: Upload firmware to GitHub Artifacts (fallback)
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-firmware
        path: openwrt/bin/targets/

    - name: Upload firmware to Cloudflare R2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        R2_BUCKET: ${{ secrets.R2_BUCKET_NAME }}
        R2_REGION: ${{ secrets.R2_REGION }}
        R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
      run: |
        pip install awscli
        cd openwrt/bin/targets/
        aws --endpoint-url $R2_ENDPOINT s3 cp . s3://$R2_BUCKET/mx4200v1/ --recursive --region $R2_REGION