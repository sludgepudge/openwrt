name: Build OpenWrt (MX4200 v1 & v2)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        device: [mx4200v1, mx4200v2]   # üëà both variants build in parallel
    name: Build OpenWrt ${{ matrix.device }}

    steps:
    - name: Checkout workflow repo
      uses: actions/checkout@v3

    - name: Set up build environment
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          gcc g++ gcc-multilib g++-multilib \
          flex bison clang gawk gettext git \
          libncurses-dev libssl-dev python3-distutils \
          rsync unzip zlib1g-dev file libelf-dev libc6-dev \
          libtool autoconf automake cmake pkg-config libglib2.0-dev
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        echo "LD=ld" >> $GITHUB_ENV

    - name: Checkout OpenWrt buildroot
      uses: actions/checkout@v4
      with:
        repository: qosmio/openwrt-ipq
        path: openwrt
        fetch-depth: 0   # full history, keeps proper rXXXXX version

    - name: Apply custom config and files
      run: |
        cd openwrt/package

        # Clone custom packages
        git clone https://github.com/gSpotx2f/luci-app-interfaces-statistics.git
        git clone https://github.com/jerrykuku/luci-theme-argon.git
        git clone https://github.com/jerrykuku/luci-app-argon-config.git
        git clone https://github.com/gSpotx2f/luci-app-cpu-status.git

        cd ..

        ./scripts/feeds update -a
        ./scripts/feeds install -a

        # Add custom files if available
        if [ -d ../custom/files ]; then
          cp -a ../custom/files/. files/
          if [ -d files/etc/profile.d ]; then
            chmod -R +x files/etc/profile.d/
          fi
        fi

        # Apply patches if any
        if [ -d ../custom/patches ]; then
          for patch in ../custom/patches/*.patch; do
            [ -f "$patch" ] && patch -p1 < "$patch"
          done
        fi

        # Use the right config.seed for the current matrix device
        cp ../config.${{ matrix.device }}.seed .config

    - name: Build firmware
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        make -j$(nproc)

    - name: Upload firmware to Cloudflare R2
      id: upload-firmware
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        R2_BUCKET: openwrt
        R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
      run: |
        cd openwrt/bin/targets
        TARGET_DIR=$(find . -type f -name version.buildinfo -exec dirname {} \;)
        cd "$TARGET_DIR"
        VERSION=$(cat version.buildinfo | tr -d '\n')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

        echo "Syncing to flush disk writes..."
        sync

        echo "Verifying SHA-256 checksums..."
        sha256sum -c sha256sums

        for file in openwrt-qualcommax-ipq807x-linksys_${{ matrix.device }}*; do
          if [[ -f "$file" ]]; then
            if [[ "$file" == *.manifest ]]; then
              newfile="manifest"
            else
              newfile="${file#openwrt-qualcommax-ipq807x-linksys_${{ matrix.device }}-}"
            fi
            echo "Renaming $file to $newfile"
            mv "$file" "$newfile"
          fi
        done

        echo "Uploading to s3://$R2_BUCKET/${{ matrix.device }}/$VERSION/"
        aws --endpoint-url "$R2_ENDPOINT" s3 cp . "s3://$R2_BUCKET/${{ matrix.device }}/$VERSION/" --recursive --exclude "packages/*"

  notify:
    runs-on: ubuntu-22.04
    needs: build
    if: always()
    steps:
    - name: Notify Discord
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        if [ "${{ needs.build.result }}" == "success" ]; then
          VERSION=$(echo "${{ toJSON(needs.build.outputs) }}" | jq -r '.[].version' | head -n1)
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"# ‚úÖ OpenWrt build succeeded!\n### Version: $VERSION\"}" $DISCORD_WEBHOOK_URL
        else
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"# ‚ùå OpenWrt build failed!\n### Check logs for failing device.\"}" $DISCORD_WEBHOOK_URL
        fi
